name: Deploy ESKAPE Analysis App

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: |
        chmod +x ./build.sh
        ./build.sh
    
    - name: Archive production artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          client/dist
          server/dist
          package.json
          package-lock.json
          .env.example
          start.sh
    
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
    
    - name: Copy files to EC2 using SCP
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "."
        target: "/home/${{ secrets.EC2_USERNAME }}/eskape-analysis"
    
    - name: Deploy to EC2 using SSH
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd /home/${{ secrets.EC2_USERNAME }}/eskape-analysis
          npm ci --production
          cp .env.example .env
          echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> .env
          chmod +x start.sh
          pm2 restart eskape-analysis || pm2 start server/dist/index.js --name eskape-analysis
